//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Neo.Native {
    #if NETSTANDARD || NETFRAMEWORK || NETCOREAPP
    [System.CodeDom.Compiler.GeneratedCode("Neo.BuildTasks","3.2.11.29999")]
    #endif
    [System.ComponentModel.Description("NeoToken")]
    interface NeoToken {
        System.Numerics.BigInteger balanceOf(Neo.UInt160 account);
        System.Numerics.BigInteger decimals();
        Neo.VM.Types.Array getAccountState(Neo.UInt160 account);
        Neo.VM.Types.Array getCandidates();
        Neo.VM.Types.Array getCommittee();
        System.Numerics.BigInteger getGasPerBlock();
        Neo.VM.Types.Array getNextBlockValidators();
        System.Numerics.BigInteger getRegisterPrice();
        bool registerCandidate(Neo.Cryptography.ECC.ECPoint pubkey);
        void setGasPerBlock(System.Numerics.BigInteger gasPerBlock);
        void setRegisterPrice(System.Numerics.BigInteger registerPrice);
        string symbol();
        System.Numerics.BigInteger totalSupply();
        bool transfer(Neo.UInt160 @from, Neo.UInt160 to, System.Numerics.BigInteger amount, object data);
        System.Numerics.BigInteger unclaimedGas(Neo.UInt160 account, System.Numerics.BigInteger end);
        bool unregisterCandidate(Neo.Cryptography.ECC.ECPoint pubkey);
        bool vote(Neo.UInt160 account, Neo.Cryptography.ECC.ECPoint voteTo);
        interface Events {
            void Transfer(Neo.UInt160 @from, Neo.UInt160 to, System.Numerics.BigInteger amount);
        }
    }
}
